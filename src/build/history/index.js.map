{"version":3,"file":"history/index.js","mappings":"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","sources":["webpack://hizzlewp/./packages/history/src/index.tsx","webpack://hizzlewp/./packages/history/src/router.tsx","webpack://hizzlewp/external window [\"wp\",\"url\"]","webpack://hizzlewp/external window \"React\"","webpack://hizzlewp/external window \"ReactJSXRuntime\"","webpack://hizzlewp/webpack/bootstrap","webpack://hizzlewp/webpack/runtime/compat get default export","webpack://hizzlewp/webpack/runtime/define property getters","webpack://hizzlewp/webpack/runtime/hasOwnProperty shorthand","webpack://hizzlewp/webpack/runtime/make namespace object","webpack://hizzlewp/webpack/before-startup","webpack://hizzlewp/webpack/startup","webpack://hizzlewp/webpack/after-startup"],"sourcesContent":["/**\n * External dependencies\n */\nimport {\n    useState,\n    useEffect,\n    useLayoutEffect,\n} from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { getQueryArgs, addQueryArgs } from '@wordpress/url';\nimport { QueryArgParsed } from '@wordpress/url/build-types/get-query-arg';\n\n/**\n * Local dependencies\n */\nexport * from './router';\n\ninterface History {\n    /**\n     * The current location.\n     */\n    location: {\n        query: Record<string, QueryArgParsed>;\n        pathname: string;\n    };\n\n    /**\n     * Push a new page onto the history stack.\n     * @param path - The path to push onto the history stack.\n     * @param data - The data to push onto the history stack.\n     */\n    push: ( path: string, data?: Record<string, string> ) => void;\n\n    /**\n     * Replace the current page.\n     * @param path - The path to replace the current page with.\n     * @param data - The data to replace the current page with.\n     */\n    replace: ( path: string, data?: Record<string, string> ) => void;\n\n    /**\n     * Go to a specific page.\n     * @param delta - The number of pages to go back or forward.\n     */\n    go: ( delta: number ) => void;\n\n    /**\n     * Go back to the previous page. Same as calling `go(-1)`.\n     */\n    back: () => void;\n\n    /**\n     * Go forward to the next page. Same as calling `go(1)`.\n     */\n    forward: () => void;\n\n    /**\n     * Listen to history changes.\n     * @param listener - The listener to call when the history changes.\n     * @returns A function to remove the listener.\n     */\n    listen: ( listener: ( location: CustomEvent<{ state: Record<string, string> }> | PopStateEvent ) => void ) => () => void;\n}\n\nlet _history: History;\n\n/**\n * Recreate `history` to coerce React Router into accepting path arguments found in query\n * parameter `hizzlewp_path`, allowing a url hash to be avoided. Since hash portions of the url are\n * not sent server side, full route information can be detected by the server.\n *\n * @return {History} React-router history object with `get location` modified.\n */\nexport function getHistory( defaultRoute = '/' ): History {\n    if ( !_history ) {\n        let listeners: ( ( location: CustomEvent<{ state: Record<string, string> }> | PopStateEvent ) => void )[] = [];\n\n        // Prevent duplicate events.\n        let lastHistory = window.location.href;\n        const handleEvent = ( event: CustomEvent<{ state: Record<string, string> }> | PopStateEvent ) => {\n            if ( lastHistory !== window.location.href ) {\n                lastHistory = window.location.href;\n                listeners.forEach( fn => fn( event ) );\n            }\n        };\n\n        // Generate a history object.\n        _history = {\n            get location() {\n                const query = getQueryArgs( window.location.search );\n                const pathname = ( query.hizzlewp_path as string || defaultRoute ).toLowerCase().replace(/\\/$/, '');\n\n                return {\n                    query,\n                    pathname: pathname.startsWith( '/' ) ? pathname : `/${ pathname }`,\n                };\n            },\n            push( url, data = {} ) {\n                window.history.pushState( data, '', url );\n                handleEvent( new CustomEvent( 'pushstate', {\n                    detail: { state: data },\n                } ) );\n            },\n            replace( url, data = {} ) {\n                window.history.replaceState( data, '', url );\n                handleEvent( new CustomEvent( 'replacestate', {\n                    detail: { state: data },\n                } ) );\n            },\n            go( delta ) {\n                window.history.go( delta );\n                handleEvent( new CustomEvent( 'popstate', {\n                    detail: { state: {} },\n                } ) );\n            },\n            back() {\n                window.history.back();\n                handleEvent( new CustomEvent( 'popstate', {\n                    detail: { state: {} },\n                } ) );\n            },\n            forward() {\n                window.history.forward();\n                handleEvent( new CustomEvent( 'popstate', {\n                    detail: { state: {} },\n                } ) );\n            },\n            listen( fn ) {\n                // Add the listener to the list.\n                listeners.push( fn );\n\n                // Return a function to remove the listener.\n                return () => {\n                    listeners = listeners.filter( listener => listener !== fn );\n                };\n            },\n        };\n\n        // Add a listener for the popstate event.\n        window.addEventListener( 'popstate', handleEvent );\n    }\n    return _history;\n}\n\n/**\n * Get the current path from history.\n *\n * @return {string}  Current path.\n */\nexport const getPath = () => getHistory().location.pathname;\n\n/**\n * Get the current query string, parsed into an object, from history.\n *\n * @return {Record<string, QueryArgParsed>}  Current query object, defaults to empty object.\n */\nexport const getQuery = () => getHistory().location.query;\n\n/**\n * Return a URL with set query parameters.\n *\n * @param {Object} query object of params to be updated.\n * @param {string} path  Relative path (defaults to current path).\n * @return {string}  Updated URL merging query params into existing params.\n */\nexport function getNewPath(\n    query: Record<string, QueryArgParsed>,\n    path = getPath(),\n    currentQuery = getQuery(),\n) {\n    const args = { ...currentQuery, ...query };\n    if ( path !== '/' ) {\n\n        if ( !path.startsWith( '/' ) ) {\n            path = `/${ path }`;\n        }\n\n        // Remove double forward slashes.\n        args.hizzlewp_path = path.replace( /\\/{2,}/g, '/' );\n    }\n\n    // Remove args where value === ''.\n    Object.keys( args ).forEach( ( key ) => {\n        if ( args[ key ] === '' ) {\n            delete args[ key ];\n        }\n    } );\n\n    return addQueryArgs( 'admin.php', args );\n}\n\n/**\n * Updates the query parameters of the current page.\n *\n * @param {Object} query        object of params to be updated.\n * @param {string} path         Relative path (defaults to current path).\n * @param {Object} currentQuery object of current query params (defaults to current querystring).\n */\nexport function updateQueryString(\n    query: Record<string, QueryArgParsed>,\n    path = getPath(),\n    currentQuery = getQuery(),\n) {\n    getHistory().push( getNewPath( query, path, currentQuery ) );\n}\n\n/**\n * Updates the path of the current page.\n *\n * @param {string} path Relative path (defaults to current path).\n */\nexport function updatePath(\n    path: string,\n) {\n    getHistory().push( getNewPath( {}, path, getQuery() ) );\n}\n\n/**\n * Navigates to the parent path.\n */\nexport function goToParent() {\n    /**\n     * Gets the current path and navigates to its parent path.\n     */\n    const currentPath = getPath();\n\n    /**\n     * Extracts the parent path by removing the last segment of the current path.\n     * If the current path is the root, it defaults to '/'.\n     */\n    const parentPath = currentPath.substring( 0, currentPath.lastIndexOf( '/' ) ) || '/';\n\n    /**\n     * Updates the path to the parent path.\n     */\n    updatePath( parentPath );\n}\n\n/**\n * Adds a listener that runs on history change.\n *\n * @param {Function} listener Listener to run on history change.\n * @return {Function} Function to remove listeners.\n */\nexport const addHistoryListener = ( listener ) => {\n    return getHistory().listen( listener );\n};\n\nfunction deepSort( obj ) {\n    if ( Array.isArray( obj ) ) {\n        // Sort arrays and apply deep sort to each element\n        return obj.map( deepSort ).sort();\n    } else if ( typeof obj === 'object' && obj !== null ) {\n        // Create a sorted array of keys with recursively sorted values\n        const sortedKeys = Object.keys( obj ).sort();\n        const result = {};\n        for ( const key of sortedKeys ) {\n            result[ key ] = deepSort( obj[ key ] );\n        }\n        return result;\n    }\n\n    // Return primitive types as is\n    return obj;\n}\n\nfunction isEqual( obj1: Record<string, QueryArgParsed>, obj2: Record<string, QueryArgParsed> ) {\n\n    // Compare the serialized forms.\n    return addQueryArgs( '', deepSort( { ...obj1 } ) ) === addQueryArgs( '', deepSort( { ...obj2 } ) );\n}\n\n/**\n * Like getQuery but in useHook format for easy usage in React functional components\n *\n * @return {Record<string, string>} Current query object, defaults to empty object.\n */\nexport const useQuery = () => {\n    // Store the current query parameters in state\n    const [ queryState, setQueryState ] = useState( getQuery() );\n    // Flag to track when the location/URL has changed\n    const [ locationChanged, setLocationChanged ] = useState( true );\n\n    // Set up a listener for history changes (navigation events)\n    useLayoutEffect( () => {\n        // Add event listeners for browser navigation (back/forward) and programmatic navigation\n        return addHistoryListener( () => {\n            // Mark that location has changed when navigation occurs\n            setLocationChanged( true );\n        } );\n    }, [] ); // Empty dependency array ensures this only runs once on mount\n\n    // Handle query parameter updates when location changes\n    useEffect( () => {\n        if ( locationChanged ) {\n            // Get the latest query parameters\n            const query = getQuery();\n\n            // Reset the location changed flag\n            setLocationChanged( false );\n\n            // Only update state if the query parameters have actually changed\n            // This prevents unnecessary re-renders\n            if ( !isEqual( query, queryState ) ) {\n                setQueryState( query );\n            }\n        }\n    }, [ locationChanged, queryState ] ); // Re-run when these dependencies change\n\n    // Return the current query parameters\n    return queryState;\n};\n\n/**\n * This function returns an event handler for the given `param`\n *\n * @param {string} param The parameter in the querystring which should be updated (ex `paged`, `per_page`)\n * @param {string} path  Relative path (defaults to current path).\n * @param {string} query object of current query params (defaults to current querystring).\n * @return {Function} A callback which will update `param` to the passed value when called.\n */\nexport function onQueryChange( param, path = getPath(), query = getQuery() ) {\n    switch ( param ) {\n        case 'sort':\n            return ( key, dir ) =>\n                updateQueryString( { orderby: key, order: dir }, path, query );\n        default:\n            return ( value ) =>\n                updateQueryString( { [ param ]: value }, path, query );\n    }\n}\n\n/**\n * A utility function that navigates to a page.\n *\n * @param {Object} args     - All arguments.\n * @param {string} args.url - Relative path or absolute url to navigate to\n */\nexport const navigateTo = ( url: string ) => {\n\n    // Update the URL.\n    getHistory().push( addQueryArgs( 'admin.php', getQueryArgs( url ) ) );\n\n    // Scroll to the top.\n    window.scrollTo( { top: 0, behavior: 'smooth' } );\n};\n\n/**\n * A hook that returns the current path.\n *\n * @return {string} The current path.\n */\nexport const usePath = (): string => {\n    const [ path, setPath ] = useState<string>( getPath() );\n    const [ locationChanged, setLocationChanged ] = useState<boolean>( false );\n\n    // Set up a listener for history changes (navigation events)\n    useLayoutEffect( () => {\n        // Add event listeners for browser navigation (back/forward) and programmatic navigation\n        return addHistoryListener( () => {\n            // Mark that location has changed when navigation occurs\n            setLocationChanged( true );\n        } );\n    }, [] ); // Empty dependency array ensures this only runs once on mount\n\n    // Handle query parameter updates when location changes\n    useEffect( () => {\n        if ( locationChanged ) {\n            const currentPath = getPath();\n\n            // Reset the location changed flag\n            setLocationChanged( false );\n\n            // Only update state if the path has actually changed\n            // This prevents unnecessary re-renders\n            if ( currentPath !== path ) {\n                setPath( currentPath );\n            }\n        }\n    }, [ locationChanged, path ] ); // Re-run when these dependencies change\n\n    // Return the current path\n    return path;\n};\n","/**\r\n * External dependencies\r\n */\r\nimport React, { createContext, useContext, useCallback, useState, useMemo, useEffect } from \"react\";\r\n\r\n/**\r\n * Internal dependencies\r\n */\r\nimport { usePath } from \".\";\r\n\r\n/**\r\n * Route config type\r\n */\r\nexport interface RouteConfig {\r\n\t/**\r\n\t * The path to match for this route.\r\n\t */\r\n\tpath: string;\r\n\r\n\t/**\r\n\t * The element to render when the route matches.\r\n\t */\r\n\telement: React.ReactNode;\r\n\r\n\t/**\r\n\t * The child routes.\r\n\t */\r\n\tchildren?: RouteConfig[];\r\n\r\n\t/**\r\n\t * The default element to render if no child routes match.\r\n\t */\r\n\tindex?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Route context type\r\n */\r\ninterface RouteContextType {\r\n\r\n\t/**\r\n\t * The current route params\r\n\t */\r\n\tparams?: Map<string, string>;\r\n\r\n\t/**\r\n\t * The current route path\r\n\t */\r\n\tpath: string;\r\n\r\n\t/**\r\n\t * The current route outlets.\r\n\t *\r\n\t * The key is the matched path pattern and the value is the route config.\r\n\t */\r\n\toutlets?: Map<string, RouteConfig>;\r\n}\r\n\r\n// Create a route context\r\nconst RouteContext = createContext<RouteContextType>( { path: '' } );\r\n\r\nexport const useRoute = () => useContext( RouteContext );\r\n\r\n/**\r\n * Matches a path against a pattern and returns the matched parameters\r\n * \r\n * @param {string} pattern - The pattern to match against (e.g. \"/:tab/:section\")\r\n * @param {string} path - The actual path to match (e.g. \"/settings/general\")\r\n * @return {Map<string, string> | undefined} - Object with matched parameters or undefined if no match\r\n */\r\nconst getParams = ( pattern: string, path: string ): Map<string, string> | undefined => {\r\n\t// Split both pattern and path into segments\r\n\tconst patternParts = pattern.split( '/' ).filter( Boolean );\r\n\tconst pathParts = path.split( '/' ).filter( Boolean );\r\n\r\n\t// If the number of segments doesn't match, return null\r\n\tif ( patternParts.length !== pathParts.length ) {\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tconst params: Map<string, string> = new Map();\r\n\r\n\t// Compare each segment\r\n\tfor ( let i = 0; i < patternParts.length; i++ ) {\r\n\t\tconst patternPart = patternParts[ i ];\r\n\t\tconst pathPart = pathParts[ i ];\r\n\r\n\t\t// If it's a parameter (starts with :)\r\n\t\tif ( patternPart.startsWith( ':' ) ) {\r\n\t\t\tconst paramName = patternPart.slice( 1 );\r\n\t\t\tparams.set( paramName, pathPart );\r\n\t\t}\r\n\t\t// If it's a static segment and doesn't match\r\n\t\telse if ( patternPart !== pathPart ) {\r\n\t\t\treturn undefined;\r\n\t\t}\r\n\t}\r\n\r\n\treturn params;\r\n}\r\n\r\n/**\r\n * Get the matching routes for a given path\r\n *\r\n */\r\nconst getMatchingRoutes = ( routes: RouteConfig[], path: string ): Map<string, RouteConfig> | null => {\r\n\tconst matchedRoutes = new Map<string, RouteConfig>();\r\n\r\n\t// Iterate over the routes.\r\n\tfor ( const route of routes ) {\r\n\t\tif ( !matchPath( route.path, path ) ) continue;\r\n\r\n\t\t// Add the route to the matched routes.\r\n\t\tmatchedRoutes.set( route.path, route );\r\n\r\n\t\tif ( route.children?.length ) {\r\n\t\t\tconst childMatch = getMatchingRoutes( route.children, path );\r\n\t\t\tif ( childMatch ) {\r\n\t\t\t\t// Merge child matches into the current map\r\n\t\t\t\tfor ( const [ key, value ] of childMatch ) {\r\n\t\t\t\t\tmatchedRoutes.set( key, value );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn matchedRoutes.size > 0 ? matchedRoutes : null;\r\n};\r\n\r\n/**\r\n * Utility to match path patterns and extract params.\r\n *\r\n * Does a partial match, e.g, /users/:id will also match /users/123/edit/:section.\r\n * This is useful for nested routes.\r\n *\r\n * @param {string} pattern - The pattern to match\r\n * @param {string} path - The path to match\r\n * @returns {Boolean} True if the path matches the pattern, false otherwise\r\n */\r\nconst matchPath = ( pattern: string, path: string ): boolean => {\r\n\tconst patternParts = pattern.split( '/' ).filter( Boolean );\r\n\tconst pathParts = path.split( '/' ).filter( Boolean );\r\n\r\n\t// If the path is shorter than the pattern, return null.\r\n\t// /users/123/edit can't match /users/:id.\r\n\tif ( pathParts.length < patternParts.length ) return false;\r\n\r\n\t// Compare each segment\r\n\tfor ( let i = 0; i < patternParts.length; i++ ) {\r\n\t\t// If it's a static segment and doesn't match, return null.\r\n\t\tif ( !patternParts[ i ].startsWith( \":\" ) && patternParts[ i ] !== pathParts[ i ] ) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\treturn true;\r\n};\r\n\r\n/**\r\n * Router component props\r\n */\r\ninterface RouterProps {\r\n\t/**\r\n\t * The routes configuration\r\n\t */\r\n\troutes: RouteConfig[];\r\n\r\n\t/**\r\n\t * Children components.\r\n\t *\r\n\t * Provide a default <Outlet /> (with no path) to render the top level route if you provide children.\r\n\t */\r\n\tchildren?: React.ReactNode;\r\n}\r\n\r\n/**\r\n * Router component\r\n */\r\nexport const Router: React.FC<RouterProps> = ( { children, routes } ) => {\r\n\tconst path = usePath();\r\n\r\n\tconst value = useMemo( () => {\r\n\t\t// If no routes or no path, return empty params\r\n\t\tif ( !routes.length || !path ) {\r\n\t\t\treturn { path };\r\n\t\t}\r\n\r\n\t\t// Find the matching routes.\r\n\t\tconst outlets = getMatchingRoutes( routes, path );\r\n\r\n\t\t// If there are no outlets, return empty params\r\n\t\tif ( !outlets ) {\r\n\t\t\treturn { path };\r\n\t\t}\r\n\r\n\t\t// Use the last outlet to get the params\r\n\t\tconst outlet = Array.from( outlets.values() ).pop();\r\n\t\tif ( !outlet ) {\r\n\t\t\treturn { path };\r\n\t\t}\r\n\r\n\t\treturn {\r\n\t\t\tparams: getParams( outlet.path as string, path ),\r\n\t\t\toutlets,\r\n\t\t\tpath,\r\n\t\t};\r\n\t}, [ routes, path ] );\r\n\r\n\treturn (\r\n\t\t<RouteContext.Provider value={ value }>\r\n\t\t\t{ children || <Outlet /> }\r\n\t\t</RouteContext.Provider>\r\n\t);\r\n};\r\n\r\n/**\r\n * The outlet component\r\n */\r\nexport const Outlet: React.FC<{ path?: string }> = ( { path } ) => {\r\n\tconst { outlets } = useRoute();\r\n\r\n\t// Get the current route level and the next outlet.\r\n\tconst [ route, nextOutlet ] = useMemo( () => {\r\n\t\tif ( !outlets ) {\r\n\t\t\treturn [ undefined, undefined ];\r\n\t\t}\r\n\r\n\t\t// Get current route\r\n\t\tconst currentRoute = path\r\n\t\t\t// Render the specified outlet.\r\n\t\t\t? outlets.get( path )\r\n\t\t\t// If no path, render the first outlet.\r\n\t\t\t: Array.from( outlets.values() )[ 0 ];\r\n\r\n\t\t// Get the outlet that renders just after the current outlet's path.\r\n\t\tlet next: RouteConfig | null = null;\r\n\t\tif ( currentRoute && path ) {\r\n\t\t\tconst entries = Array.from( outlets.entries() );\r\n\t\t\tconst currentIndex = entries.findIndex( ( [ p ] ) => p === path );\r\n\t\t\tif ( currentIndex !== -1 && currentIndex + 1 < entries.length ) {\r\n\t\t\t\tconst [ nextPath, nextRoute ] = entries[ currentIndex + 1 ];\r\n\t\t\t\tif ( nextPath.startsWith( path ) ) {\r\n\t\t\t\t\tnext = nextRoute;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn [ currentRoute, next ];\r\n\t}, [ path, outlets ] );\r\n\r\n\t// If no outlet, return null.\r\n\tif ( !route ) {\r\n\t\treturn null;\r\n\t}\r\n\r\n\t// If no path, return the default element.\r\n\tif ( !path ) {\r\n\t\treturn route.element;\r\n\t}\r\n\r\n\t// If there is a next outlet, return it.\r\n\tif ( nextOutlet ) {\r\n\t\treturn nextOutlet.element;\r\n\t}\r\n\r\n\t// If we have an index, return it.\r\n\tif ( route.index ) {\r\n\t\treturn route.index;\r\n\t}\r\n\r\n\t// Return null.\r\n\treturn null;\r\n};\r\n","module.exports = window[\"wp\"][\"url\"];","module.exports = window[\"React\"];","module.exports = window[\"ReactJSXRuntime\"];","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./packages/history/src/index.tsx\");\n",""],"names":["useState","useEffect","useLayoutEffect","getQueryArgs","addQueryArgs","_history","getHistory","defaultRoute","listeners","lastHistory","window","location","href","handleEvent","event","forEach","fn","query","search","pathname","hizzlewp_path","toLowerCase","replace","startsWith","push","url","data","history","pushState","CustomEvent","detail","state","replaceState","go","delta","back","forward","listen","filter","listener","addEventListener","getPath","getQuery","getNewPath","path","currentQuery","args","Object","keys","key","updateQueryString","updatePath","goToParent","currentPath","parentPath","substring","lastIndexOf","addHistoryListener","deepSort","obj","Array","isArray","map","sort","sortedKeys","result","isEqual","obj1","obj2","useQuery","queryState","setQueryState","locationChanged","setLocationChanged","onQueryChange","param","dir","orderby","order","value","navigateTo","scrollTo","top","behavior","usePath","setPath","React","createContext","useContext","useMemo","jsx","_jsx","RouteContext","useRoute","getParams","pattern","patternParts","split","Boolean","pathParts","length","undefined","params","Map","i","patternPart","pathPart","paramName","slice","set","getMatchingRoutes","routes","matchedRoutes","route","matchPath","children","childMatch","size","Router","outlets","outlet","from","values","pop","Provider","Outlet","nextOutlet","currentRoute","get","next","entries","currentIndex","findIndex","p","nextPath","nextRoute","element","index"],"sourceRoot":""}